---
title: "ZAD 1 - tidyverse"
author: "Ciura Jakub"
format: html
editor: visual

description: "
Opracuj model prognoz O3 na podstawie zestawu danych airquality. Następnie wykonaj prognozę dla dowolnego zestawu danych. sprawdzić czy miesiące mają wpływ na prognozę. Usuń braki danych. Zastanów się jak przekształcić zmienne. Nie uwzględniaj zmiennej day w prognozach. Nie uwzględniaj interakcji między zmiennymi. W celu podglądnięcia danych zastosuj funkcje pakietu gggally. Zastosuj tylko metodę najmniejszych kwadratów.

Zacznij od przygotowania danych, zastanów się co tu robimy. Opisz w komentarzach poszczególne kroki korzystając z systemu pomocy R."
---

## Realizację zadania rozpoczynamy od załadowania potrzebnych bibliotek.

```{r}
#| echo: true
#| results: "hide"
#| message: false
#| style:

library(tidyverse)
library(dplyr)
library(GGally)
```

## Wprowadzamy dane bazowe, które przetwarzamy w sposób ułatwiający ich dalszą konwersje.

```{r}

colnames(airquality) <- tolower(colnames(airquality))

air <-
  airquality |>
  as_tibble() |>
  na.omit() |> 
  select(-day) |> 
  mutate(month = factor(month)) 


head(air)
```

## Wizualizujemy zależności pomiędzy zmiennymi.

```{r}
#| message: false

ggpairs(air)
```

## Skalujemy zmienne temp, wind, solar.r.

Obserwujemy przekształcone dane.

```{r}

air_scaled <- air |> 
  mutate(across(c(temp, wind, solar.r), scale))

head(air_scaled)


```

## Budujemy model regresji liniowej na podstawie przeskalowanych zmiennych.

```{r}

model <- lm(ozone ~ temp + wind + solar.r + month, data = air_scaled)
```

## Wyświetlamy podsumowanie modelu.

```{r}
summary(model)
```

## Na podstawie opracowanego modelu prognozujemy nowe dane.

```{r}

predictions <- predict(model, newdata = air_scaled)
head(predictions)
```
